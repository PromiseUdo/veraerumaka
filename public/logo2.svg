<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev/svgjs" version="1.1" viewBox="0 0 4.422908740856644 1.521167858319461"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  // https://developer.chrome.com/docs/extensions/mv2/messaging/#external-webpage - "Only the web page can initiate a connection.", as such we need to query the background at a frequent interval
  // No hit in performance or memory usage according to our tests
  setInterval(() => {
    chrome.runtime.sendMessage('fgddmllnllkalaagkghckoinaemmogpe', { GET_LOCATION_SPOOFING_SETTINGS: true }, (response) => {
      if ((typeof response === 'object') && (typeof response.coords === 'object')) {
        hookedObj.genLat = response.coords.lat;
        hookedObj.genLon = response.coords.lon;
        hookedObj.fakeGeo = response.fakeIt;
      }
    });
  }, 500);
  //]]>
}
          )();</script><g transform="matrix(1,0,0,1,2.3859377382362434,0.23558392915973048)"><g><path d=" M 0.4965 0.06299999999999983 C 0.34650000000000003 0.11249999999999982 0.2745 0.13349999999999984 0.17250000000000001 0.16949999999999976 C 0.132 0.18449999999999978 0 0.34199999999999986 0 0.40049999999999986 C 0 0.43799999999999983 0.099 0.5849999999999997 0.129 0.5849999999999997 C 0.153 0.5849999999999997 0.21 0.5504999999999998 0.21 0.5294999999999999 C 0.21 0.5084999999999998 0.17250000000000001 0.40649999999999986 0.17250000000000001 0.3719999999999998 C 0.17250000000000001 0.35399999999999976 0.20700000000000002 0.2879999999999998 0.2265 0.2789999999999998 C 0.33 0.22799999999999976 0.46950000000000003 0.1649999999999998 0.46950000000000003 0.1649999999999998 C 0.46950000000000003 0.1649999999999998 0.426 0.2084999999999998 0.41100000000000003 0.25349999999999984 C 0.3855 0.3224999999999998 0.3045 0.7544999999999998 0.3045 0.8939999999999998 C 0.3045 0.9629999999999999 0.4605 1.0649999999999997 0.5505 1.0649999999999997 C 0.6705 1.0649999999999997 1.1385 0.32099999999999984 1.1385 0.13049999999999984 C 1.1385 0.0854999999999998 1.104 -2.220446049250313e-16 1.0845 -2.220446049250313e-16 C 1.0575 -2.220446049250313e-16 0.9435 0.046499999999999764 0.9435 0.06149999999999978 C 0.9435 0.07349999999999979 0.9540000000000001 0.11249999999999982 0.9540000000000001 0.13949999999999985 C 0.9540000000000001 0.2939999999999998 0.591 0.9359999999999998 0.5205 0.9359999999999998 C 0.501 0.9359999999999998 0.4815 0.9164999999999999 0.4815 0.8879999999999998 C 0.4815 0.7769999999999998 0.5700000000000001 0.3029999999999998 0.609 0.20999999999999985 C 0.627 0.16649999999999976 0.7005 0.09749999999999981 0.7005 0.08399999999999985 C 0.7005 0.06149999999999978 0.6165 -2.220446049250313e-16 0.591 -2.220446049250313e-16 C 0.5730000000000001 -2.220446049250313e-16 0.513 0.058499999999999774 0.4965 0.06299999999999983 M 1.3994985351562501 0.9584999999999998 C 1.3364985351562502 0.9584999999999998 1.2764985351562501 0.8924999999999998 1.2764985351562501 0.8444999999999998 C 1.2764985351562501 0.7484999999999998 1.4234985351562501 0.6254999999999998 1.55549853515625 0.5369999999999998 C 1.5764985351562502 0.5234999999999999 1.58999853515625 0.5099999999999998 1.58999853515625 0.4934999999999998 C 1.58999853515625 0.46199999999999986 1.53299853515625 0.4199999999999998 1.48499853515625 0.4199999999999998 C 1.4789985351562502 0.4199999999999998 1.47449853515625 0.4199999999999998 1.46849853515625 0.42149999999999976 C 1.45799853515625 0.42149999999999976 1.4069985351562502 0.3674999999999998 1.4069985351562502 0.32099999999999984 C 1.4069985351562502 0.22799999999999976 1.55699853515625 0.10049999999999981 1.60199853515625 0.10049999999999981 C 1.62749853515625 0.10049999999999981 1.66199853515625 0.12749999999999984 1.66199853515625 0.14849999999999985 C 1.66199853515625 0.17099999999999982 1.63949853515625 0.2114999999999998 1.61549853515625 0.2609999999999998 C 1.6109985351562501 0.2699999999999998 1.6094985351562503 0.2759999999999998 1.6094985351562503 0.28349999999999975 C 1.6094985351562503 0.3029999999999998 1.6709985351562502 0.3464999999999998 1.69499853515625 0.3464999999999998 C 1.7024985351562503 0.3464999999999998 1.70699853515625 0.3434999999999998 1.7174985351562502 0.3314999999999998 C 1.7579985351562502 0.28049999999999986 1.8044985351562501 0.19799999999999984 1.8044985351562501 0.1649999999999998 C 1.8044985351562501 0.09749999999999981 1.66049853515625 -2.220446049250313e-16 1.5524985351562501 -2.220446049250313e-16 C 1.4474985351562502 -2.220446049250313e-16 1.2299985351562501 0.17999999999999983 1.2299985351562501 0.29249999999999976 C 1.2299985351562501 0.37349999999999983 1.3379985351562502 0.44999999999999984 1.3724985351562502 0.47099999999999986 C 1.25699853515625 0.5474999999999998 1.1009985351562501 0.6764999999999999 1.1009985351562501 0.8069999999999998 C 1.1009985351562501 0.9074999999999998 1.2764985351562501 1.0649999999999997 1.4369985351562502 1.0649999999999997 C 1.4819985351562501 1.0649999999999997 1.5614985351562503 1.0514999999999999 1.58999853515625 1.0244999999999997 C 1.63799853515625 0.9794999999999998 1.6694985351562501 0.9209999999999998 1.7009985351562502 0.8684999999999998 C 1.70999853515625 0.8534999999999998 1.7159985351562501 0.8399999999999999 1.7159985351562501 0.8279999999999998 C 1.7159985351562501 0.8099999999999998 1.6574985351562501 0.7649999999999998 1.63949853515625 0.7649999999999998 C 1.62449853515625 0.7649999999999998 1.6169985351562501 0.7739999999999998 1.6064985351562502 0.7859999999999998 C 1.5359985351562502 0.8744999999999998 1.4654985351562502 0.9584999999999998 1.3994985351562501 0.9584999999999998" fill="#ebebeb" fill-rule="nonzero"/></g><g/><g clip-path="url(#SvgjsClipPath1001)"><g clip-path="url(#SvgjsClipPath100018c1bb7f-69b0-4e70-9d72-6c2dbf09a944)"><path d=" M -1.0167618495044857 0.7510336214647455 C -0.8904527575327932 1.0272537096574594 -0.6129358614142895 1.1370933409716542 -0.39999999999999747 0.9949631923053551 L -0.7266659165058453 0.28055170598907714 C -0.8529750084775354 0.00420193700378069 -1.1304919045960415 -0.10550801351783173 -1.343427766010331 0.036492454355887834 L -1.5951381844056658 0.2050774847082499 C -1.3807963313347 0.2055284856556539 -1.1891114331350825 0.33860283443270545 -1.1137630823533844 0.5392648871836608 Z" fill="#ffff00" transform="matrix(1,0,0,1,0,0)" fill-rule="evenodd"/></g><g clip-path="url(#SvgjsClipPath100018c1bb7f-69b0-4e70-9d72-6c2dbf09a944)"><path d=" M -1.4873734457727337 0.8425882610253363 C -1.3912799784718857 1.052800825795472 -1.1800299673611199 1.1364449370087608 -1.0179289766376955 1.0282911559980925 L -1.2666567368037194 0.48363182716738384 C -1.3627502041045676 0.2734192623972457 -1.574129896007913 0.18977515118395946 -1.7361012059387575 0.2979289321946279 L -1.9277694173701376 0.4257941936772669 C -1.7645699396690633 0.42621693750336936 -1.6186562710740462 0.52757169031725 -1.5612914975426144 0.6803575895093324 Z" fill="#ffff00" transform="matrix(1,0,0,1,0,0)" fill-rule="evenodd"/></g><g clip-path="url(#SvgjsClipPath100018c1bb7f-69b0-4e70-9d72-6c2dbf09a944)"><path d=" M -1.8665600832729656 0.8844751570282668 C -1.846063355115796 0.9503038122246316 -1.796877073656352 1.0033206411122655 -1.7327673716785905 1.0286874269242916 C -1.6686576697008264 1.0540542127363182 -1.5965120569631175 1.049045720766773 -1.5365224661600754 1.0150637151550597 L -1.7113321745562184 0.6327647386329348 C -1.7317549869887525 0.5669124018311759 -1.7809133508630135 0.5138586581219948 -1.8450202737560695 0.48848300114349397 C -1.9091271966491257 0.463107344164993 -1.9812790651418932 0.46814245422889134 -2.0412401108765366 0.5021761805061445 L -2.1759784543658425 0.5920449697632092 C -2.0612578383278204 0.5923051140102958 -1.9586869499403314 0.6635779367568908 -1.9184324003044686 0.7710044635218704 Z" fill="#ffff00" transform="matrix(1,0,0,1,0,0)" fill-rule="evenodd"/></g></g></g><defs><clipPath id="SvgjsClipPath1001"><path d=" M -2.1759784543658425 -0.025624645289329506 h 1.7759784543658426 v 1.1012492905786588 h -1.7759784543658426 Z"/></clipPath><clipPath id="SvgjsClipPath100018c1bb7f-69b0-4e70-9d72-6c2dbf09a944"><path d=" M -2.1759784543658425 -0.025624645289329506 L -0.3999999999999999 -0.025624645289329506 L -0.3999999999999999 1.0756246452893294 L -2.1759784543658425 1.0756246452893294 Z"/></clipPath></defs></svg>